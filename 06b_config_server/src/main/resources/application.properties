# randomly picks up the port from eureka registry
server.port=${PORT:0}

spring.jackson.serialization.INDENT_OUTPUT=true
#enabling/disabling this service to get registered in eureka server
eureka.client.register-with-eureka=true
spring.application.name=config-server
eureka.instance.prefer-ip-address=true

# we dont need registry for config server because from config server we wont invoke any other microservice.
# other microservices invoke config server, but config server does not invoke any microservices. 
eureka.client.fetch-registry=false

#url of eureka server for getting registered eureka server registry
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# local git
#spring.cloud.config.server.git.uri=file://${user.home}/Personal/ST/RTP-repo/test-config-server-repo
spring.cloud.config.server.git.uri=file:///D:/Workspace/poc-spring-cloud-configurations-git-repo

#To avoid exception "No such label: main", spring-cloud tries to find "main" branch label in git-repo as Now a days, default branch name of GitHub is "main"
spring.cloud.config.server.git.default-label=master

#spring.cloud.config.server.git.uri=https://{username}@bitbucket.org/{username}/{config-git-repo.git}
# if http basic security is there for git repo
#spring.cloud.config.server.git.username={username}
#spring.cloud.config.server.git.password={password}