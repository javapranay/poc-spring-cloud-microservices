server.port=8761

#management.security.enabled=false
#spring.jackson.serialization.INDENT_OUTPUT=true

# no need to register eureka server with itself
eureka.client.register-with-eureka=false

# do not cache the service registry locally, the server instances registration and removal should happen as and when they are available or goes down.
# But for client application this should be set to true. Because clients should not go to eureka server everytime it needs a service instance, 
# instead it should cache locally and only refresh the list of instances time to time from eureka server. 
eureka.client.fetch-registry=false

# eureka server wont publish the service instances immediately, it will wait for 3 heart beats from the service instance, each hearbeat would be after 10sec, 
# so before a service instance can be published by eureka server it takes 30secs
eureka.server.wait-time-in-ms-when-sync-empty=5
















# if suddenly many instances of a service stops sending the hearbeat, then eureka server thinks that there is a network problem 
# and it wont de-register the services even though they are not responding. This set up may be good in production where there are many instances running
# but in local machine if you are running one instance and want to test de-registration, it wont work if this property is set to true
#eureka.server.enable-self-preservation=false